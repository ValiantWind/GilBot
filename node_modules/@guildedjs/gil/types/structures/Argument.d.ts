import type { Message } from "guilded.js";
import type { BotClient } from "../BotClient";
import type { Command, CommandArgument } from "./Command";
export declare abstract class Argument {
    readonly client: BotClient;
    name: string;
    constructor(client: BotClient, name: string);
    abstract execute(argument: CommandArgument, parameters: string[], message: Message, command: Command): Promise<unknown> | unknown;
    abstract init(): Promise<unknown> | unknown;
}
export default Argument;
//# sourceMappingURL=Argument.d.ts.map