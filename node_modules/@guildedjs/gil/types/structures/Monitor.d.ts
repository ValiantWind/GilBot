import type { Message } from "guilded.js";
import type { BotClient } from "../BotClient";
export declare abstract class Monitor {
    readonly client: BotClient;
    name: string;
    /** Whether this monitor should ignore messages that are sent by bots. By default this is true. */
    ignoreBots: boolean;
    /** Whether this monitor should ignore messages that are sent by others. By default this is false.*/
    ignoreOthers: boolean;
    /** Whether this monitor should ignore messages that are edited. By default this is false.*/
    ignoreEdits: boolean;
    /** Whether this monitor should ignore messages that are sent in DM. By default this is true. */
    ignoreDM: boolean;
    constructor(client: BotClient, name: string);
    abstract execute(message: Message): Promise<unknown> | unknown;
    abstract init(): Promise<unknown> | unknown;
}
export default Monitor;
//# sourceMappingURL=Monitor.d.ts.map