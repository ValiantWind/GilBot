"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AllowedInInhibitor = void 0;
const Inhibitor_1 = require("../structures/Inhibitor");
class AllowedInInhibitor extends Inhibitor_1.Inhibitor {
    constructor() {
        super(...arguments);
        this.name = "allowedIn";
    }
    execute(message, command) {
        var _a;
        // The command should be allowed to run because it meets the requirements
        // allowedIn defaults to ["server"]
        if ((!command.allowedIn || command.allowedIn.includes("server")) && message.serverId)
            return false;
        // If the command is allowed in dms
        if (((_a = command.allowedIn) === null || _a === void 0 ? void 0 : _a.includes("dm")) && !message.serverId)
            return false;
        // THE COMMANDS NEEDS TO BE INHIBITED.
        console.log(`${command.name} Inhibited: ALLOWED IN`);
        return true;
    }
    init() {
        // shut up eslint
    }
}
exports.AllowedInInhibitor = AllowedInInhibitor;
exports.default = AllowedInInhibitor;
//# sourceMappingURL=allowedIn.js.map