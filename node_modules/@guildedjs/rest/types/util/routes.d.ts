import type { UserSocialLink } from "@guildedjs/guilded-api-typings";
export declare const ROUTES: {
    readonly channels: () => string;
    readonly channel: (channelId: string) => `/channels/${string}`;
    readonly channelMessages: (channelId: string) => `/channels/${string}/messages`;
    readonly channelMessage: (channelId: string, messageId: string) => `/channels/${string}/messages/${string}`;
    readonly memberNickname: (serverId: string, userId: string) => `/servers/${string}/members/${string}/nickname`;
    readonly memberRoles: (serverId: string, userId: string) => `/servers/${string}/members/${string}/roles`;
    readonly member: (serverId: string, userId: string) => `/servers/${string}/members/${string}`;
    readonly members: (serverId: string) => `/servers/${string}/members`;
    readonly memberBan: (serverId: string, userId: string) => `/servers/${string}/bans/${string}`;
    readonly memberBans: (serverId: string) => `/servers/${string}/bans`;
    readonly forumThread: (channelId: string) => `/channels/${string}/forum`;
    readonly listItems: (channelId: string) => `/channels/${string}/items`;
    readonly listItem: (channelId: string, itemId: string) => `/channels/${string}/items/${string}`;
    readonly listItemComplete: (channelId: string, itemId: string) => `/channels/${string}/items/${string}/complete`;
    readonly channelDocs: (channelId: string) => `/channels/${string}/docs`;
    readonly channelDoc: (channelId: string, docId: number) => `/channels/${string}/docs/${number}`;
    readonly channelReaction: (channelId: string, contentId: string, emoteId: number) => `/channels/${string}/content/${string}/emotes/${number}`;
    readonly memberXP: (serverId: string, userId: string) => `/servers/${string}/members/${string}/xp`;
    readonly roleXP: (serverId: string, roleId: string) => `/servers/${string}/roles/${string}/xp`;
    readonly memberSocialLinks: (serverId: string, userId: string, type: UserSocialLink) => `/servers/${string}/members/${string}/social-links/twitch` | `/servers/${string}/members/${string}/social-links/bnet` | `/servers/${string}/members/${string}/social-links/psn` | `/servers/${string}/members/${string}/social-links/xbox` | `/servers/${string}/members/${string}/social-links/steam` | `/servers/${string}/members/${string}/social-links/origin` | `/servers/${string}/members/${string}/social-links/youtube` | `/servers/${string}/members/${string}/social-links/twitter` | `/servers/${string}/members/${string}/social-links/facebook` | `/servers/${string}/members/${string}/social-links/switch` | `/servers/${string}/members/${string}/social-links/patreon` | `/servers/${string}/members/${string}/social-links/roblox`;
    readonly groupMember: (groupId: string, userId: string) => `/groups/${string}/members/${string}`;
    readonly memberRole: (serverId: string, memberId: string, roleId: number) => `/servers/${string}/members/${string}/roles/${number}`;
    readonly serverWebhooks: (serverId: string) => string;
    readonly serverWebhook: (serverId: string, webhookId: string) => string;
};
//# sourceMappingURL=routes.d.ts.map