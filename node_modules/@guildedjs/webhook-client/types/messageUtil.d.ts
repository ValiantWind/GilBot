import type { APIContent, APIEmbed } from "@guildedjs/guilded-api-typings";
import { Embed } from "./Embed";
export declare function parseToMessage(input?: string | EmbedStructure, embed?: EmbedStructure): APIContent;
/**
 * Parse a message recieved from Guilded into a more digestable structure
 * @internal
 */
export declare function parseMessage(data: APIContent): parsedMessage;
/**
 * A parsed message
 * @internal
 */
export interface parsedMessage {
    parsedText: string;
    parsedArr: parsedTextResponse[];
    mentions: {
        users: string[];
        channels: string[];
        reactions: string[];
        roles: string[];
    };
    embeds: APIEmbed[];
}
/**
 * The mentions this message might contain
 * @internal
 */
export interface MessageDataNode {
    reaction?: {
        id: string;
    };
    mention?: {
        id: string | number;
        type: string;
        matcher: string;
        name: string;
        color: string;
        nickname?: boolean;
        avatar?: string;
    };
    channel?: {
        id: string;
        matcher: string;
        name: string;
    };
}
export declare type EmbedStructure = Embed | APIEmbed;
/**
 * The parsed text of each leaf in the message
 * @internal
 */
export interface parsedTextResponse {
    type: string;
    content: string;
    mention?: unknown;
    reaction?: unknown;
    channel?: unknown;
}
/**
 * The message structure of a string -> message object suitable to send to guilded
 */
export interface enforcedMessageStructure {
    messageId: string;
    content: APIContent;
}
//# sourceMappingURL=messageUtil.d.ts.map