import type { RESTPostWebhookResult } from "@guildedjs/guilded-api-typings";
import type { APIContent } from "@guildedjs/guilded-api-typings/dist/v1/structs/Webhook";
import type { Embed } from "./Embed";
import { type parsedMessage } from "./messageUtil";
export declare class WebhookClient {
    URL: string;
    id: string;
    token: string;
    private rest;
    constructor(webhookConnection: string | {
        id: string;
        token: string;
    });
    send(content: string, embeds?: Embed[]): Promise<WebhookExecuteResponse>;
}
export interface WebhookExecuteResponse extends Omit<RESTPostWebhookResult, "content"> {
    content: string;
    parsedContent: parsedMessage;
    rawContent: APIContent;
}
//# sourceMappingURL=WebhookClient.d.ts.map