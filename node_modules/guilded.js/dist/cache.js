"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.inMemoryCacheBuilder = exports.CacheCollection = void 0;
const collection_1 = __importDefault(require("@discordjs/collection"));
/**
 * A collection with a max cap size, which will remove a random element
 */
class CacheCollection extends collection_1.default {
    constructor(options, entries) {
        var _a;
        super(entries);
        if ((options === null || options === void 0 ? void 0 : options.maxSize) !== undefined && options.maxSize < 1) {
            throw new TypeError("Cannot pass 0 or negative value as maxSize.");
        }
        this.maxSize = (_a = options === null || options === void 0 ? void 0 : options.maxSize) !== null && _a !== void 0 ? _a : Infinity;
    }
    set(...args) {
        if (this.size >= this.maxSize)
            this.delete(this.firstKey());
        return super.set(...args);
    }
}
exports.CacheCollection = CacheCollection;
function inMemoryCacheBuilder(_structName, _struct) {
    return new CacheCollection();
}
exports.inMemoryCacheBuilder = inMemoryCacheBuilder;
//# sourceMappingURL=cache.js.map