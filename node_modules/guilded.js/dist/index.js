"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseToMessage = exports.parseMessage = exports.resolveColor = exports.COLORS = exports.WebhookClient = exports.WebhookEmbed = void 0;
__exportStar(require("./structures"), exports);
__exportStar(require("./structures/Client"), exports);
__exportStar(require("./managers/global"), exports);
__exportStar(require("./gateway/ClientGatewayHandler"), exports);
__exportStar(require("./cache"), exports);
__exportStar(require("./constants"), exports);
__exportStar(require("./util"), exports);
__exportStar(require("./typings"), exports);
var webhook_client_1 = require("@guildedjs/webhook-client");
Object.defineProperty(exports, "WebhookEmbed", { enumerable: true, get: function () { return webhook_client_1.Embed; } });
Object.defineProperty(exports, "WebhookClient", { enumerable: true, get: function () { return webhook_client_1.WebhookClient; } });
Object.defineProperty(exports, "COLORS", { enumerable: true, get: function () { return webhook_client_1.COLORS; } });
Object.defineProperty(exports, "resolveColor", { enumerable: true, get: function () { return webhook_client_1.resolveColor; } });
Object.defineProperty(exports, "parseMessage", { enumerable: true, get: function () { return webhook_client_1.parseMessage; } });
Object.defineProperty(exports, "parseToMessage", { enumerable: true, get: function () { return webhook_client_1.parseToMessage; } });
//# sourceMappingURL=index.js.map