"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TeamEventHandler = void 0;
const constants_1 = require("../../constants");
const GatewayEventHandler_1 = require("./GatewayEventHandler");
const util_1 = require("../../util");
class TeamEventHandler extends GatewayEventHandler_1.GatewayEventHandler {
    teamRolesUpdated(data) {
        const newMembers = [];
        const oldMembers = [];
        for (const m of data.d.memberRoleIds) {
            const member = this.client.members.cache.get((0, util_1.buildMemberKey)(data.d.serverId, m.userId));
            if (!member) {
                newMembers.push(Object.assign(Object.assign({}, m), { serverId: data.d.serverId }));
                continue;
            }
            oldMembers.push(member._clone());
            newMembers.push(member._update({ roleIds: m.roleIds }));
        }
        return this.client.emit(constants_1.constants.clientEvents.ROLES_UPATED, newMembers, oldMembers);
    }
}
exports.TeamEventHandler = TeamEventHandler;
//# sourceMappingURL=TeamEventHandler.js.map