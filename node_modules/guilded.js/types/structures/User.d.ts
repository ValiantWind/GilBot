import { Base } from "./Base";
import type { UserPayload, WSWelcomePayload } from "@guildedjs/guilded-api-typings";
import type { Client } from "./Client";
export declare class User extends Base<UserPayload> {
    /** The name for this user */
    name: string;
    /** The type of this user */
    readonly type: UserType;
    /** The avatar image associated with this user */
    avatar: string | null;
    /** The banner image associated with this user */
    banner: string | null;
    /** When this user was created */
    readonly createdAt: Date | null;
    constructor(client: Client, data: UserPayload);
    _update(data: Partial<UserPayload>): this;
}
export declare class ClientUser extends User {
    readonly createdBy: string;
    readonly botId: string;
    constructor(client: Client, data: WSWelcomePayload["d"]["user"]);
}
export declare enum UserType {
    Bot = 0,
    User = 1
}
//# sourceMappingURL=User.d.ts.map