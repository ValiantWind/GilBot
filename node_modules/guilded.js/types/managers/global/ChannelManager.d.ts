import type { RESTPatchChannelBody, RESTPostChannelsBody } from "@guildedjs/guilded-api-typings";
import { Channel, DocChannel, ForumChannel, ListChannel } from "../../structures";
import { CacheableStructManager } from "./CacheableStructManager";
import type { ChannelType as APIChannelType } from "@guildedjs/guilded-api-typings";
export declare class GlobalChannelManager extends CacheableStructManager<string, Channel> {
    get shouldCacheChannel(): boolean;
    create(options: RESTPostChannelsBody): Promise<Channel>;
    fetch(channelId: string, force?: boolean): Promise<Channel>;
    update(channelId: string, options: RESTPatchChannelBody): Promise<Channel>;
    delete(channelId: string): Promise<Channel | void>;
}
export declare const transformTypeToChannel: (str: APIChannelType) => typeof DocChannel | typeof ForumChannel | typeof ListChannel;
export declare const typeToChannel: {
    forums: typeof ForumChannel;
    docs: typeof DocChannel;
    list: typeof ListChannel;
};
//# sourceMappingURL=ChannelManager.d.ts.map