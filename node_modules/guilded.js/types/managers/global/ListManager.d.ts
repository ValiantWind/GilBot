import type { ListItemPayload, ListItemSummaryPayload, RESTPostListItemBody, RESTPutListItemBody } from "@guildedjs/guilded-api-typings";
import { GlobalManager } from "./GlobalManager";
export declare class GlobalListItemManager extends GlobalManager {
    /** Create a list item. */
    create(channelId: string, options: RESTPostListItemBody): Promise<ListItemPayload>;
    /** Get list items */
    fetchMany(channelId: string): Promise<ListItemSummaryPayload[]>;
    /** Get list item */
    fetch(channelId: string, itemId: string): Promise<ListItemPayload>;
    /** Update list item */
    update(channelId: string, itemId: string, options: RESTPutListItemBody): Promise<ListItemPayload>;
    /** Delete list item */
    delete(channelId: string, itemId: string): Promise<void>;
    /** Complete list item */
    complete(channelId: string, itemId: string): Promise<void>;
    /** Uncomplete list item */
    uncomplete(channelId: string, itemId: string): Promise<void>;
}
//# sourceMappingURL=ListManager.d.ts.map