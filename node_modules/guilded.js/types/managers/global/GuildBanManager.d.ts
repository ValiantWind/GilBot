import Collection from "@discordjs/collection";
import { MemberBan } from "../../structures/Member";
import { CacheableStructManager } from "./CacheableStructManager";
export declare class GlobalGuildBanManager extends CacheableStructManager<string, MemberBan> {
    get shouldCacheBan(): boolean;
    /** Fetch a member ban in a server */
    fetch(serverId: string, userId: string, force?: boolean): Promise<MemberBan>;
    /** Fetch all bans in a server */
    fetchMany(serverId: string): Promise<Collection<string, MemberBan>>;
    /** Ban a user from a server */
    ban(serverId: string, userId: string): Promise<MemberBan>;
    /** Unban a user from a server. Returns existing ban if cached. */
    unban(serverId: string, userId: string, removeBanIfCached?: boolean): Promise<MemberBan | null>;
}
//# sourceMappingURL=GuildBanManager.d.ts.map