import type { EmbedPayload, RESTPostChannelMessagesBody, TeamMemberBanPayload, TeamMemberPayload, TeamMemberSummaryPayload } from "@guildedjs/guilded-api-typings";
import type { Embed } from "./structures";
export interface BareStructureBaseData {
    id: string;
}
export declare type UpgradedTeamMemberPayload = IDUpgradePayload<TeamUpgradePayload<TeamMemberPayload>>;
export declare type UpgradedTeamMemberBanPayload = TeamUpgradePayload<TeamMemberBanPayload>;
export declare type UpgradedTeamMemberSummaryPayload = IDUpgradePayload<TeamUpgradePayload<TeamMemberSummaryPayload>>;
export declare type TeamUpgradePayload<T> = T & {
    serverId: string;
};
export declare type IDUpgradePayload<T> = T & {
    id: string;
};
export declare type MessageContent = (Omit<RESTPostChannelMessagesBody, "embeds"> & {
    embeds?: Embed[] | EmbedPayload[];
}) | string | Embed;
//# sourceMappingURL=typings.d.ts.map